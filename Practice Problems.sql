CREATE DATABASE ORG;
SHOW DATABASES;
USE ORG;

CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME CHAR(25),
    LAST_NAME CHAR(25),
    SALARY INT(15),
    JOINING_DATE DATETIME,
    DEPARTMENT CHAR(25)
);

INSERT INTO Worker ( WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES 
	(001, 'Monika', 'Arora', 100000, '14-02-20 09:00:00', 'HR'),
    (002, 'Niharika', 'Verma', 8000, '14-06-11 09:00:00', 'Admin'),
    (003, 'Vishal', 'Singhal', 300000, '14-02-20 09:00:00', 'HR'),
    (004, 'Amitabh', 'Singh', 500000, '14-02-20 09:00:00', 'Admin'),
    (005, 'Vivek', 'Bhati', 500000, '14-06-11 09:00:00', 'Admin'),
    (006, 'Vipul', 'Diwan', 200000, '14-06-11 09:00:00', 'Account'),
    (007, 'Satish', 'Kumar', 75000, '14-01-20 09:00:00', 'Account'),
    (008, 'Geetika', 'Chauhan', 90000, '14-04-11 09:00:00', 'Admin');


CREATE TABLE BONUS (
	WORKER_REF_ID INT,
    BONUS_AMOUNT INT(10),
    BONUS_DATE DATETIME,
    FOREIGN KEY (WORKER_REF_ID) 
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO BONUS (WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
	(001, 5000, '16-02-20'),
    (002, 3000, '16-06-11'),
    (003, 4000, '16-02-20'),
    (004, 4500, '16-02-20'),
    (005, 3500, '16-06-11');
    
CREATE TABLE Title (
	WORKER_REF_ID INT,
    WORKER_TITLE CHAR(25),
    AFFECTEF_FROM DATETIME,
    FOREIGN KEY(WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
        -- IT HELP IN WHEN YOU DELETE TUPPLE FROM PARENT THEN CHILD TUPPLE IS ALSO DELETED ANS ON DELETE SET NULL NULL KAR DETA HAI
);

INSERT INTO Title (WORKER_REF_ID, WORKER_TITLE, AFFECTEF_FROM) VALUES
	(001, 'Manager', '2016-02-20 00:00:00'),
    (002, 'Executive', '2016-06-11 00:00:00'),
    (003, 'Executive', '2016-06-11 00:00:00'),
    (004, 'Manager', '2016-06-11 00:00:00'),
    (005, 'Asst. Manager', '2016-06-11 00:00:00'),
    (006, 'Executive', '2016-06-11 00:00:00'),
    (007, 'Lead', '2016-06-11 00:00:00'),
    (008, 'Lead', '2016-06-11 00:00:00');
    
SELECT * FROM Worker;
SELECT * FROM BONUS;
SELECT * FROM Title;

-- QUESTIONS
SELECT FIRST_NAME AS WORKER_NAME FROM Worker;
SELECT UPPER(FIRST_NAME) AS WORKER_NAME FROM Worker;
SELECT DISTINCT DEPARTMENT FROM Worker;
SELECT DEPARTMENT FROM Worker GROUP BY DEPARTMENT;
SELECT substring(FIRST_NAME, 1, 3) FROM Worker;
SELECT INSTR(FIRST_NAME, 'b') FROM Worker WHERE FIRST_NAME = 'Amitabh';
SELECT RTRIM(FIRST_NAME) FROM Worker;
SELECT DISTINCT DEPARTMENT, length(DEPARTMENT) AS LENGTH FROM Worker;
SELECT replace(FIRST_NAME, 'a', 'A') FROM Worker;
SELECT concat(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME FROM Worker;
SELECT * FROM Worker ORDER BY FIRST_NAME ASC;
SELECT * FROM Worker ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;
SELECT * FROM WORKER WHERE FIRST_NAME IN ('Vipul','Satish');
SELECT * FROM WORKER WHERE FIRST_NAME NOT IN ('Vipul', 'Satish');
SELECT * FROM WORKER WHERE DEPARTMENT LIKE 'Admin%';
SELECT * FROM WORKER WHERE FIRST_NAME LIKE '%a%';
SELECT * FROM WORKER WHERE FIRST_NAME LIKE '%a';
SELECT * FROM WORKER WHERE FIRST_NAME LIKE '_____H';
SELECT * FROM WORKER WHERE SALARY BETWEEN 100000 AND 500000;
SELECT * FROM WORKER WHERE YEAR(JOINING_DATE) = 2014 AND MONTH(JOINING_DATE) = 02;
SELECT DEPARTMENT, COUNT(*) AS NUMBER_OF_EMPLOYEE FROM WORKER WHERE DEPARTMENT = 'Admin'; 
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME), SALARY FROM WORKER WHERE SALARY >= 50000 AND SALARY <= 100000;
SELECT DEPARTMENT, COUNT(*) AS COUNT FROM WORKER GROUP BY DEPARTMENT ORDER BY COUNT DESC;
SELECT W.* FROM WORKER AS W INNER JOIN Title AS T ON w.WORKER_ID = T.WORKER_REF_ID WHERE T.WORKER_TITLE = 'Manager';
SELECT WORKER_TITLE, COUNT(*) AS COUNT FROM Title GROUP BY WORKER_TITLE HAVING COUNT > 1 ORDER BY COUNT DESC;
SELECT * FROM WORKER WHERE MOD (WORKER_ID,2) <> 0; -- <> EQUAL = alter
CREATE TABLE WORKER_CLONE LIKE WORKER;
INSERT INTO WORKER_CLONE SELECT * FROM WORKER;
SELECT * FROM WORKER_CLONE;
SELECT * FROM WORKER
INNER JOIN WORKER_CLONE USING (WORKER_ID);
SELECT WORKER.* FROM WORKER LEFT JOIN WORKER_cLONE USING(WORKER_ID) WHERE WORKER_CLONE.WORKER_ID IS NULL;
SELECT CURDATE();
SELECT NOW();

 


























    